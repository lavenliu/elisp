* 消息中间件
* 消息中间件简介
  消息中间件是在消息的传输过程中保存消息的容器。消息中间件再将消息从
  它的源中继到它的目标时充当中间人的作用。队列的主要目的是提供路由并
  保证消息的传递；如果发送消息时接收者不可用，消息队列会保留消息，直
  到可以成功地传递为止，当然，消息队列保存消息也是有期限的。
* 消息中间件特点
  1. 采用异步处理模式
	 #+BEGIN_EXAMPLE
	 消息发送者可以发送一个消息而无须等待响应。消息发送者将消息发送到一条
	 虚拟的通道（主题或队列）上，消息接收者则订阅或是监听该通道。一条消息
	 可能最终转发给一个或多个消息接收者，这些接收者都无需对消息发送者做出
	 同步回应。整个过程是异步的。

	 比如用户信息注册。注册完毕后过段时间发送邮件或者短信。
	 #+END_EXAMPLE
  2. 应用程序和应用程序调用关系为松耦合关系
	 #+BEGIN_EXAMPLE
	 发送者和接收者不必了解对方、只需要确认消息。

	 发送者和接收者不必同时在线。

	 比如在线交易系统为了保证数据的最终一致，在支付系统处理完成后会把支付
	 结果放到消息中间件里通知订单系统修改订单支付状态。两个系统通过消息中间件
	 解耦。
	 #+END_EXAMPLE
* 消息传递服务模型
  一个截图。2016-05-08_141205.png
* 消息中间件的传递模型
  主流的消息中间件传递模型
** 点对点模型(PTP)
   点对点模型用于消息生产者和消息消费者之间点到点的通信。消息生产者将
   消息发送到由某个名字标识的特定消费者。这个名字实际上对应于消息服务
   中的一个队列（Queue），在消息传递给消费者之前它被存储在这个队列中。
   队列消息可以放在内存中也可以是持久的，以保证在消息服务出现故障时仍
   然能够传递消息。

   点对点模型特性：(2016-05-08_142038.png)
   1. 每个消息只有一个消费者
   2. 发送者和接收者没有时间依赖
   3. 接收者确认消息接收和处理成功
** 发布-订阅模型(Pub/Sub)
   发布者/订阅者模型支持向一个特定的消息主题生产消息。0或多个订阅者可
   能对接收来自特定消息主题的消息感兴趣。在这种模型下，发布者和订阅者
   彼此不知道对方。这种模式好比是匿名公告板。这种模式被概括为：多个消
   费者可以获得消息，在发布者和订阅者之间存在时间依赖性。发布者需要建
   立一个订阅（subscription），以便能够消费者订阅。订阅者必须保持持续
   的活动状态以接收消息，除非订阅者建立了持久的订阅。在这种情况下，在
   订阅者未连接时发布的消息将在订阅者重新连接时重新发布。

   发布/订阅模型特性： (2016-05-09_100544.png)
   1. 每个消息可以有多个订阅者
   2. 客户端只有订阅后才能接收消息
   3. 持久订阅和非持久订阅
* 互联网消息中间件应用场景
** 用户注册异步处理案例
** 日志分析使用案例
** 数据复制案例
** 延迟消息发送和暂存
** 消息广播
* 消息中间件分类
** metaq
*** metaq简介
*** metaq架构
*** metaq特点
*** metaq重要术语
*** metaq主要配置项介绍
*** metaq的集群实现
*** metaq主要命令讲解
** RabbitMQ
*** RabbitMQ介绍
*** RabbitMQ整体架构
*** RabbitMQ重要术语
*** Exchange分类
**** 直接式交换器类型
**** 广播式交换器类型
**** 主题式交换器类型
*** RabbitMQ常用配置
*** RabbitMQ命令介绍
*** RabbitMQ安装
