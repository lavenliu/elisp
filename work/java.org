#+TITLE: Java Programming Language
#+AUTHOR: LavenLiu
#+DATE: 2014-08-20
#+EMAIL: ldczz2008@163.com 

#+STARTUP: OVERVIEW
#+TAGS: OFFICE(o) HOME(h) PROJECT(p) CHANGE(c) REPORT(r) MYSELF(m) 
#+TAGS: PROBLEM(P) INTERRUPTTED(i) RESEARCH(R)
#+SEQ_TODO: TODO(t)  STARTED(s) WAITING(W) | DONE(d) CANCELLED(C) DEFERRED(f)
#+COLUMNS: %40ITEM(Details) %TAGS(Context) %7TODO(To Do) %5Effort(Time){:} %6CLOCKSUM{Total}

#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [a4paper,11pt]
#+LaTeX_HEADER: \usepackage[top=2.1cm,bottom=2.1cm,left=2.1cm,right=2.1cm]{geometry}
#+LaTeX_HEADER: \setmainfont[Mapping=tex-text]{Times New Roman}
#+LaTeX_HEADER: \setsansfont[Mapping=tex-text]{Tahoma}
#+LaTeX_HEADER: \setmonofont{Courier New}
#+LaTeX_HEADER: \setCJKmainfont[BoldFont={Adobe Heiti Std},ItalicFont={Adobe Kaiti Std}]{Adobe Song Std}
#+LaTeX_HEADER: \setCJKsansfont{Adobe Heiti Std}
#+LaTeX_HEADER: \setCJKmonofont{Adobe Fangsong Std}
#+LaTeX_HEADER: \punctstyle{hangmobanjiao}
#+LaTeX_HEADER: \usepackage{color,graphicx}
#+LaTeX_HEADER: \usepackage[table]{xcolor}
#+LaTeX_HEADER: \usepackage{colortbl}
#+LaTeX_HEADER: \usepackage{listings}
#+LaTeX_HEADER: \usepackage[bf,small,indentafter,pagestyles]{titlesec}

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/style2.css" />

#+OPTIONS: ^:nil
#+OPTIONS: tex:t

* Java开发环境准备
** JDK安装
*** Windows系统下安装JDK
*** Gnu/Linux系统下安装JDK
	在Linux下安装JDK非常简单，把下载的JDK安装包放到指定的目录即可，接
	下来设置环境变量，
	#+BEGIN_SRC sh
cat >> /etc/profile << EOF
JAVA_HOME=/usr/local/jdk
JRE_HOME=${JAVA_HOME}/jre
CLASS_PATH=${JAVA_HOME}/lib:${JRE_HOME}/lib
PATH=$PATH:$JAVA_HOME/bin
export JAVA_HOME
export JRE_HOME
EOF
	#+END_SRC
** Maven安装
  首先到apache官网下载maven安装包，下载链接为：
  #+BEGIN_SRC sh
http://mirrors.advancedhosters.com/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip
  #+END_SRC
  
  如果系统有wget工具，则在命令行可以直接下载之，
  #+BEGIN_SRC sh
wget http://mirrors.advancedhosters.com/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.zip
  #+END_SRC

  如果没有wget工具，则可以把下载链接粘贴到浏览器的地址栏里也可。

  下载完毕就可以进行安装了。安装之前需要有JDK的开发环境，这里假设已有
  JDK环境。
*** Windows系统下安装Maven
   	1. 比如把maven包解压到C盘，
   	2. 设置环境变量
	   #+BEGIN_EXAMPLE
	   M2_HOME c:\apache-maven-3.3.9
	   PATH ;%M2_HOME%\bin
	   #+END_EXAMPLE
   	3. 命令行测试
	   #+BEGIN_SRC sh
	   mvn -version
	   #+END_SRC
*** Gnu/Linux系统下安装Maven
* Maven项目管理
  一个安装selenium的pom.xml文件，
  #+BEGIN_SRC sh
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
        <modelVersion>4.0.0</modelVersion>
        <groupId>MySel20Proj</groupId>
        <artifactId>MySel20Proj</artifactId>
        <version>1.0</version>
        <dependencies>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>2.25.0</version>
            </dependency>
            <dependency>
                <groupId>com.opera</groupId>
                <artifactId>operadriver</artifactId>
            </dependency>
        </dependencies>
        <dependencyManagement>
            <dependencies>
                <dependency>
                    <groupId>com.opera</groupId>
                    <artifactId>operadriver</artifactId>
                    <version>0.16</version>
                    <exclusions>
                        <exclusion>
                            <groupId>org.seleniumhq.selenium</groupId>
                            <artifactId>selenium-remote-driver</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </dependencyManagement>
</project>
  #+END_SRC

  mvn命令如下：
  #+BEGIN_SRC sh
mvn clean insatll #下载Selenium及其依赖的jar包
mvn eclipse:eclipse #生成为eclipse能识别的项目
# 然后导入到Eclipse中，即可很方便的地添加基于Selenium的JUnit测试程序。
  #+END_SRC
* Eclipse常用快捷键一览
  *编辑相关快捷键*
  1. 注释           - Ctrl+/
  2. 快速修复       - Ctrl+1
  3. 删除当前行     - Ctrl+D
  4. 格式化文档     - Ctrl+Shift+F
  5. 插入空行       - Shift+Enter
  6. 编辑窗口最大化 - Ctrl+M
  7. 显示大纲       - Ctrl+O

  *查看及定位快捷键*
  1. 查找Java类文件     - Ctrl+Shift+T
  2. 查找引用           - Ctrl+Shift+G
  3. 后退历史记录       - Alt+LeftArrow Alt+RightArrow
  4. 快速查找选定的内容 - Ctrl+K

  *重构快捷键*
  1. 重命名 - Alt+Shift+R
* Java变量类型
* Salt Tomcat
  #+BEGIN_SRC sh
mkdir -p /srv/salt/{jdk,tomcat}
mkdir /srv/salt/jdk/files
  #+END_SRC
  安装jdk的salt SLS文件
  #+BEGIN_SRC sh
cat /srv/salt/jdk/install.sls
jdk-install:
  file.managed:
    - name: /usr/local/src/jdk-8u45-linux-x64.tar.gz
    - source: salt://jdk/files/jdk-8u45-linux-x64.tar.gz
    - user: root
    - group: root
    - mode: 755
  cmd.run:
    - name: cd /usr/local/src && tar -xf jdk-8u45-linux-x64.tar.gz && mv jdk1.8.0_45 /usr/local/jdk && chown -R root:root /usr/local/jdk
    - unless: test -d /usr/local/jdk
    - require:
      - file: jdk-install

jdk-config:
  file.append:
    - name: /etc/profile
    - text:
      - export JAVA_HOME=/usr/local/jdk
      - export PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH
      - export CLASSPATH=.$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jar
  #+END_SRC

  安装tomcat的SLS文件，
  #+BEGIN_SRC sh
mkdir /srv/salt/tomcat/files
cat /srv/salt/tomcat/install.sls
include:
  - jdk.install

tomcat-install:
  file.managed:
    - name: /usr/local/apache-tomcat-8.0.23.tar.gz
    - source: salt://tomcat/files/apache-tomcat-8.0.23.tar.gz
    - user: root
    - group: root
    - mode: 755
  cmd.run:
    - name: cd /usr/local/src && tar -xf apache-tomcat-8.0.23.tar.gz && mv apache-tomcat-8.0.23 /usr/local/tomcat && chown -R root:root /usr/local/tomcat
    - unless: test -d /usr/local/tomcat
    - require:
      - file: tomcat-install

tomcat-config:
  file.append:
    - name: /etc/profile
    - text:
      - export: TOMCAT_HOME=/usr/local/tomcat
  #+END_SRC

  接下来写top文件，
  #+BEGIN_SRC sh
cat /srv/salt/top.sls
base:
  '*':
    - tomcat.install
  #+END_SRC

  接下来在Master端执行，
  #+BEGIN_SRC sh
salt '*' state.highstate
salt '*' saltutil.running
  #+END_SRC
