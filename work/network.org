#+TITLE: 网络
#+AUTHOR: LavenLiu
#+DATE: 2010-05-04
#+EMAIL: ldczz2008@163.com 

#+LaTeX_CLASS: article
#+LaTeX_CLASS_OPTIONS: [a4paper,11pt]
#+LaTeX_HEADER: \usepackage[top=2.1cm,bottom=2.1cm,left=2.1cm,right=2.1cm]{geometry}
#+LaTeX_HEADER: \setmainfont[Mapping=tex-text]{Times New Roman}
#+LaTeX_HEADER: \setsansfont[Mapping=tex-text]{Tahoma}
#+LaTeX_HEADER: \setmonofont{Courier New}
#+LaTeX_HEADER: \setCJKmainfont[BoldFont={Adobe Heiti Std},ItalicFont={Adobe Kaiti Std}]{Adobe Song Std}
#+LaTeX_HEADER: \setCJKsansfont{Adobe Heiti Std}
#+LaTeX_HEADER: \setCJKmonofont{Adobe Fangsong Std}
#+LaTeX_HEADER: \punctstyle{hangmobanjiao}
#+LaTeX_HEADER: \usepackage{color,graphicx}
#+LaTeX_HEADER: \usepackage[table]{xcolor}
#+LaTeX_HEADER: \usepackage{colortbl}
#+LaTeX_HEADER: \usepackage{listings}
#+LaTeX_HEADER: \usepackage[bf,small,indentafter,pagestyles]{titlesec}
#+LaTeX_HEADER: \renewcommand{\baselinestretch}{1.38}
#+LaTeX_HEADER: \setlength{\baselineskip}{20pt}

#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/style2.css" />

#+OPTIONS: ^:nil

* Internet

* 局域网和广域网
  #+BEGIN_EXAMPLE
  局域网 花钱买设备 带宽有保证
  广域网 花钱买带宽
  #+END_EXAMPLE
** VLAN
   以太网是一种基于CSMA/CD（Carrier Sense Multiple Access/Collision
   Detect，载波侦听多路访问/冲突检测）的共享通讯介质的数据网络通讯技
   术，当主机数目较多时会导致冲突严重、广播泛滥、性能显著下降甚至使
   网络不可用等问题。通过交换机实现LAN互联虽然可以解决冲突
   （Collision）严重的问题，但仍然不能隔离广播报文。在这种情况下出现
   了VLAN（Virtual Local Area Network，虚拟局域网）技术，这种技术可
   以把一个LAN划分成多个逻辑的LAN——VLAN，每个VLAN是一个广播域，VLAN
   内的主机间通信就和在一个LAN内一样，而VLAN间则不能直接互通，这样，
   广播报文被限制在一个VLAN内。

   VLAN的有点如下：
   + 限制广播域。广播域被限制在一个VLAN内，节省了带宽，提高了网络处理能力。
   + 增强局域网的安全性。VLAN间的二层报文是相互隔离的。如果不同VLAN
	 要进行通信，则需要通过路由器或三层交换机等三层设备。
   + 灵活构建虚拟工作组。

   +VLAN划分：+
   + 基于端口的VLAN
   + 基于MAC地址的VLAN
   + 基于协议的VLAN
   + 基于IP子网的VLAN
   + 基于策略的VLAN
   + 其它VLAN
	
* 服务器和客户机
* 网际互联模型
* 理解OSI参考模型
  #+BEGIN_SRC ditaa :file images/osi001.png
   +-----------------------------+
   | cRED    Application         |
   +-----------------------------+
   | cPNK    Presentation        |
   +-----------------------------+
   | cYEL     Session            |
   +-----------------------------+
   | cBLU     Transport          |
   +-----------------------------+
   | cGRE     Network            | 
   +-----------------------------+
   | c1AC     DataLink           |
   +-----------------------------+
   | c1AB     Physical           |
   +-----------------------------+
  #+END_SRC

  #+RESULTS:
  [[file:images/osi001.png]]

  任何系统之间，如果需要通信，就有一套自己的协议系统。这个协议系统不仅
  要定义双方互相通信所使用的语言，还要规定所使用的硬件，比如通信线路等。
  例如以太网协议，凡是接入以太网的（交换机或者HUB）节点，都必须遵循以
  太网所规定的通信规程。两个对讲机之间进行通话，必须预先定义好发送和接
  收的频率，而且还要指定通信的逻辑，比如每说一句话之后，要说一个“完毕”，
  表示本地已经说完，该对方说了。

  数据总是由原始直接可读状态被转变成电路的点位振荡流，或者频率和振幅不
  断变化的机械波，也可能转换成一定频率的电磁波。
  
  互相通信的两个系统之间必定要有连通的介质，空气、以太网或者其他形式，
  电磁波传递不需要介质。
  
  相互通信的双方必须知道自己是在和谁通信。

  以上三个要素，就是系统互联通信所具备的“连”、“找”、“发”三要素。
  + 连：就是指通信的双方必须用某种形式连通起来，否则两个没有任何形式连
    通的系统之间是无法通信的。即便是电磁波通信，也至少通过了电磁波连通。
  + 找：是说通信的双方或者多方，必须能够区分自己和对方以及多方（广播系
    统除外）。
  + 发：定义了通信的双方如何将数据通过连通介质或者电磁波发送到对方。
** OSI模型的七个层次
   网络通信三元素抽象模型是对OSI模型的更高层次的抽象。OSI模型将系统间
   通信划分成了七个层次。OSI模型的最上面的三层，可以归属到应用层之中，
   因为这三层都不关心如何将数据传送到对方，只关心如何组织和表达要传送
   的数据。

   1. 应用层
      #+BEGIN_EXAMPLE
	  能够产生网络流量的应用程序
	  #+END_EXAMPLE

   2. 表示层
	  #+BEGIN_EXAMPLE
	  数据如何加密、压缩，传输时是二进制还是ASCII码
	  #+END_EXAMPLE

   3. 会话层
	  #+BEGIN_EXAMPLE
	  服务端和客户端之间的会话
	  使用netstat -nb命令可以查看当前系统建立的会话信息 (Windows)
	  #+END_EXAMPLE

   4. 传输层
	  #+BEGIN_EXAMPLE
	  可以进行可靠传输（事先建立三次握手，流量控制，丢包重传）       
	  与不可靠传输
	  #+END_EXAMPLE

   5. 网络层
	  #+BEGIN_EXAMPLE
	  选择最佳路径
	  网络地址规划
	  #+END_EXAMPLE

   6. 数据链路层
	  #+BEGIN_EXAMPLE
	  如何标识网络设备，使用MAC地址标识设备
	  帧开始和结束
	  数据链路层也具有差错检验机制
	  #+END_EXAMPLE

   7. 物理层
	  #+BEGIN_EXAMPLE
	  定义网络设备接口标准，电压标准
	  #+END_EXAMPLE
	 
	 
  #+BEGIN_EXAMPLE
  网络排错:
  从底层到高层的顺序来排错

  物理层：网线是否连接好
  数据链路层：速率不一致、MAC地址冲突
  网络层：IP地址设置错误、网关错误、子网掩码错误
  应用层：浏览器设置问题

  操作系统问题：重启、重装、格式化 :-)

  替换法排错：
  #+END_EXAMPLE   


  #+BEGIN_EXAMPLE
  OSI参考模型和网络安全
  从安全角度理解OSI参考模型
  物理层安全
  数据链路层安全 无线密码 MAC ADSL拨号
  网络层安全 基于IP地址实现的数据包过滤 封端口
  传输层安全
  应用层安全 Web漏洞 数据库漏洞
  #+END_EXAMPLE

* 网络设备
  #+BEGIN_EXAMPLE
  网线：8根 10M及100M（使用了4根线1 3 2 6） 1000M（8根全部使用）
	  直通线（适合计算机连接交换机及集线器）
	  交叉线（适合两台计算机直连，由于计算机之间可以协商，直通线也是可以使用的）
	  全反线（一般用于配置交换机及路由器时使用的线缆）

  集线器（HUB） 冲突域 不安全 带宽共享 建议使用30台机器以内
  网桥 能够学习及构造MAC地址表 基于MAC地址转发数据 划分冲突域
  交换机 能够构造MAC地址表 比网桥性能好 安全 带宽端口独享 转发广播包到所有接口
  路由器 广域网接口 不同网段之间转发数据 隔绝广播
  #+END_EXAMPLE

  网络设备和OSI参考模型
  #+BEGIN_EXAMPLE
  网络层设备 --> 路由器
  数据链路层设备 --> 交换机
  物理层设备 --> 网线、集线器
  #+END_EXAMPLE
* 数据封装
  #+BEGIN_EXAMPLE
  数据由应用层提供
  源端口目标端口数据段或消息
  目标IP地址源IP地址数据包
  目标MAC地址源MAC地址数据帧
  #+END_EXAMPLE
* 传输模式
  #+BEGIN_EXAMPLE
  按数据流向分为三种传输模式：
  单工
  半双工 对讲机
  全双工 手机
  #+END_EXAMPLE
* Cisco组网三层模型
  Cisco的层次模型可以用来帮助设计、实现和维护可扩展、可靠、性能价格比
  高的层次化的互联网络，Cisco定义了3个层次，每一层都有特定的功能：
  - 接入层（Layer 2 Switching），最终用户被许可接入网络的点
  - 汇聚层（Layer 3 Switching），接入层设备的汇聚点
  - 核心层（Layer 2/Layer 3 Switching），高速交换背板，不进行任何过滤，因为会影响转发速度

  #+BEGIN_EXAMPLE
  核心层
  汇聚层
  接入层
  #+END_EXAMPLE
* TCP/IP协议和网络安全
** 在TCP/IP中包含一系列用于处理数据通信的协议
   + TCP（传输控制协议）        - 应用程序之间通信
   + UDP（用户数据包协议）      - 应用程序之间的简单通信
   + IP（网际协议）             - 计算机之间的通信
   + ICMP（因特网消息控制协议） - 针对错误和状态
   + DHCP（动态主机配置协议）   - 针对动态寻址

** TCP使用固定的连接
   TCP用于应用程序之间的通信。

   当应用程序希望通过TCP与另一个应用程序通信时，它会发送一个应用请求。
   这个请求必须被送到一个确切的地址。在双方“握手”之后，TCP将在两个应
   用程序之间建立一个全双工（full-duplex）的通信。

   这个全双工的通信将占用两个计算机之间的通信线路，直到它被一方或双
   方关闭为止。

   UDP和TCP很相似，但是更简单，同时可靠性低于TCP。

** IP是无连接的
   IP用于计算机之间的通信。

   IP是无连接的通信协议。它不会占用两个通信的计算机之间的通信线路。
   这样，IP就降低了对网络线路的需求。每条线可以同时满足许多不同计算
   机之间的通信需要。
   
   通过IP，消息（或者其他数据）被分隔为小的独立的包，并通过因特网在
   计算机之间传送。

   IP负责将每个包路由至它的目的地。

** IP路由器
   当一个 IP 包从一台计算机被发送，它会到达一个 IP 路由器。

   IP路由器负责将这个包路由至它的目的地，直接地或者通过其他的路由器。

   在一个相同的通信中，一个包所经由的路径可能会和其他的包不同。而路
   由器负责根据通信量、网络中的错误或者其他参数来进行正确地寻址。

** TCP/IP
   TCP/IP意味着TCP和IP在一起协同工作。

   TCP负责应用软件（比如你的浏览器）和网络软件之间的通信。
   
   IP负责计算机之间的通信。
   
   TCP负责将数据分割并装入IP包，然后在它们到达的时候重新组合它们。
   
   IP负责将包发送至接受者。


  #+BEGIN_EXAMPLE
  传输层协议
  TCP 可靠传输 编号 丢包重传 流量控制 三次握手 建立会话
  UDP 不可靠传输 不需要编号 不建立会话

  land攻击 目标地址与源地址相同的数据包 建立会话
  syn半连接攻击 伪造源地址

  应用层协议和传输层协议之间的关系：
  http=TCP+80
  https=TCP+443
  ftp=TCP+21
  smtp=TCP+25
  pop3=TCP+110
  rdp=TCP+3389
  dns=udp+53
  Windows共享文件夹=TCP+445
  SQL Server=TCP+1433
  mysql=tcp+3306
  telnet=tcp+23

  服务与应用层之间的关系：
  服务运行后就会在TCP或UDP的某个端口侦听客户端的请求
  #+END_EXAMPLE
   
*** TCP连接建立（三次握手）

    为了建立一条TCP连接，计算机需要为我们做如下的工作：

    1. 请求端（通常称为客户）发送一个SYN段指明客户打算连接的服务器端口，
       以及初始序号（ISN）。这个SYN段为下面的UML中的报文段1。
    2. 服务器发回包含服务器的初始序号的SYN报文段（下面UML图中的报文段2）
       作为应答。同时，将确认序号设置为客户的ISN加1对客户的SYN报文段进
       行确认。
    3. 客户必须将确认序号设置为服务器的ISN加1对服务器的SYN报文段进行确
       认（下面UML图中的报文段3）。

    这三个报文段完成连接的建立。这个过程我们称之为三次握手（three-way
    handshake）。

    发送第一个SYN的一端将执行主动打开（active open）。接收这个SYN并发
    回下一个SYN的另一端执行被动打开（passive open）。

    #+BEGIN_SRC plantuml :file images/tcp_connect.png
    title TCP连接建立
    autonumber
    participant client
    participant server

    note over client , server
    client与server初始状态都处于CLOSED
    end note

    client ->  server : SYN(SEQ=x)
    activate client
    note left: 3次握手的第1步，\n此后client处于SYN_SENT状态

    client <-- server : SYN(SEQ=y,ACK=x+1)
    activate server
    note right: 3次握手的第2步，\n此后server处于SYN_RCVD状态

    client ->  server : (SEQ=x+1,ACK=y+1)
    deactivate client
    deactivate server
    note left of client: 3次握手的第3步，\nclient确认server的SYN，\n并处于ESTABLISHED状态
    note right of server: server的SYN被client确认后，\nserver也进入ESTABLISHED状态

    note over client , server
    3次握手结束，client与server都进入ESTABLISHED状态
    从现在开始双方可以传输数据了
    end note
    #+END_SRC

    #+RESULTS:
    [[file:images/tcp_connect.png]]
